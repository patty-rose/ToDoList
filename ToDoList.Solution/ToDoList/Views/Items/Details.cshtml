@{
  Layout = "_Layout";
}

@model ToDoList.Models.Item//needed so view can reference the model

<h2>Item Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Description): @Html.DisplayFor(model => model.Description)<h3>

@* the model's JoinEntities property now holds the list of associated categories. *@
@if(@Model.JoinEntities.Count == 0)
{
  <p>This item does not belong to any categories</p>
}
else
{
  <h4>Categories the item belongs to:</h4>
  <ul>
    @* We call the variable join to specify that we are accessing those categories via the join class. *@
  @foreach(var join in Model.JoinEntities)
  {
    <li>@join.Category.Name</li>
    @using (Html.BeginForm("DeleteCategory", "Items"))
    {
      @Html.Hidden("joinId", @join.CategoryItemId)
      <input type="submit" value="Delete"/>
    }
  }
  </ul>
}

<p>@Html.ActionLink("Add a Category", "AddCategory", new { id = Model.ItemId })</p>
<p>@Html.ActionLink("Back to list", "Index")</p>
<p>@Html.ActionLink("Edit Item", "Edit", new { id = Model.ItemId })</p>
<p>@Html.ActionLink("Delete Item", "Delete", new { id = Model.ItemId })</p>
